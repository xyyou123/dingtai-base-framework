package com.dingtai.android.library.model.db;

import com.dingtai.android.library.model.models.ADModel;
import com.dingtai.android.library.model.models.AccountModel;
import com.dingtai.android.library.model.models.ModelStatus;
import com.dingtai.android.library.model.models.NewsCollectModel;
import com.dingtai.android.library.model.models.XGNotificationModel;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig accountModelDaoConfig;
    private final DaoConfig aDModelDaoConfig;
    private final DaoConfig modelStatusDaoConfig;
    private final DaoConfig newsCollectModelDaoConfig;
    private final DaoConfig xGNotificationModelDaoConfig;

    private final AccountModelDao accountModelDao;
    private final ADModelDao aDModelDao;
    private final ModelStatusDao modelStatusDao;
    private final NewsCollectModelDao newsCollectModelDao;
    private final XGNotificationModelDao xGNotificationModelDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        accountModelDaoConfig = daoConfigMap.get(AccountModelDao.class).clone();
        accountModelDaoConfig.initIdentityScope(type);

        aDModelDaoConfig = daoConfigMap.get(ADModelDao.class).clone();
        aDModelDaoConfig.initIdentityScope(type);

        modelStatusDaoConfig = daoConfigMap.get(ModelStatusDao.class).clone();
        modelStatusDaoConfig.initIdentityScope(type);

        newsCollectModelDaoConfig = daoConfigMap.get(NewsCollectModelDao.class).clone();
        newsCollectModelDaoConfig.initIdentityScope(type);

        xGNotificationModelDaoConfig = daoConfigMap.get(XGNotificationModelDao.class).clone();
        xGNotificationModelDaoConfig.initIdentityScope(type);

        accountModelDao = new AccountModelDao(accountModelDaoConfig, this);
        aDModelDao = new ADModelDao(aDModelDaoConfig, this);
        modelStatusDao = new ModelStatusDao(modelStatusDaoConfig, this);
        newsCollectModelDao = new NewsCollectModelDao(newsCollectModelDaoConfig, this);
        xGNotificationModelDao = new XGNotificationModelDao(xGNotificationModelDaoConfig, this);

        registerDao(AccountModel.class, accountModelDao);
        registerDao(ADModel.class, aDModelDao);
        registerDao(ModelStatus.class, modelStatusDao);
        registerDao(NewsCollectModel.class, newsCollectModelDao);
        registerDao(XGNotificationModel.class, xGNotificationModelDao);
    }
    
    public void clear() {
        accountModelDaoConfig.clearIdentityScope();
        aDModelDaoConfig.clearIdentityScope();
        modelStatusDaoConfig.clearIdentityScope();
        newsCollectModelDaoConfig.clearIdentityScope();
        xGNotificationModelDaoConfig.clearIdentityScope();
    }

    public AccountModelDao getAccountModelDao() {
        return accountModelDao;
    }

    public ADModelDao getADModelDao() {
        return aDModelDao;
    }

    public ModelStatusDao getModelStatusDao() {
        return modelStatusDao;
    }

    public NewsCollectModelDao getNewsCollectModelDao() {
        return newsCollectModelDao;
    }

    public XGNotificationModelDao getXGNotificationModelDao() {
        return xGNotificationModelDao;
    }

}
