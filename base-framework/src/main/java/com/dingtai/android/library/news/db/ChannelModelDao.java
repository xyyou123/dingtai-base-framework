package com.dingtai.android.library.news.db;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import com.dingtai.android.library.news.model.ChannelModel;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;
import org.greenrobot.greendao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table "CHANNEL_MODEL".
*/
public class ChannelModelDao extends AbstractDao<ChannelModel, Long> {

    public static final String TABLENAME = "CHANNEL_MODEL";

    /**
     * Properties of entity ChannelModel.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property _id = new Property(0, Long.class, "_id", true, "_id");
        public final static Property ParentId = new Property(1, String.class, "parentId", false, "PARENT_ID");
        public final static Property ID = new Property(2, String.class, "ID", false, "ID");
        public final static Property ChannelName = new Property(3, String.class, "ChannelName", false, "CHANNEL_NAME");
        public final static Property ImageUrl = new Property(4, String.class, "ImageUrl", false, "IMAGE_URL");
        public final static Property IsAd = new Property(5, String.class, "IsAd", false, "IS_AD");
        public final static Property IsShowHome = new Property(6, String.class, "IsShowHome", false, "IS_SHOW_HOME");
        public final static Property IsTopic = new Property(7, String.class, "IsTopic", false, "IS_TOPIC");
        public final static Property ShowOrder = new Property(8, String.class, "ShowOrder", false, "SHOW_ORDER");
        public final static Property HadChild = new Property(9, String.class, "HadChild", false, "HAD_CHILD");
        public final static Property Issubscribe = new Property(10, String.class, "Issubscribe", false, "ISSUBSCRIBE");
        public final static Property IsHtml = new Property(11, String.class, "IsHtml", false, "IS_HTML");
        public final static Property ChannelUrl = new Property(12, String.class, "ChannelUrl", false, "CHANNEL_URL");
        public final static Property ReMark = new Property(13, String.class, "ReMark", false, "RE_MARK");
        public final static Property IsDingYue = new Property(14, String.class, "isDingYue", false, "IS_DING_YUE");
        public final static Property IsDel = new Property(15, String.class, "IsDel", false, "IS_DEL");
        public final static Property StID = new Property(16, String.class, "StID", false, "ST_ID");
        public final static Property Type = new Property(17, String.class, "Type", false, "TYPE");
        public final static Property EnChName = new Property(18, String.class, "EnChName", false, "EN_CH_NAME");
        public final static Property BigFont = new Property(19, String.class, "BigFont", false, "BIG_FONT");
        public final static Property ChannelLogo = new Property(20, String.class, "ChannelLogo", false, "CHANNEL_LOGO");
    }


    public ChannelModelDao(DaoConfig config) {
        super(config);
    }
    
    public ChannelModelDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"CHANNEL_MODEL\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: _id
                "\"PARENT_ID\" TEXT," + // 1: parentId
                "\"ID\" TEXT," + // 2: ID
                "\"CHANNEL_NAME\" TEXT," + // 3: ChannelName
                "\"IMAGE_URL\" TEXT," + // 4: ImageUrl
                "\"IS_AD\" TEXT," + // 5: IsAd
                "\"IS_SHOW_HOME\" TEXT," + // 6: IsShowHome
                "\"IS_TOPIC\" TEXT," + // 7: IsTopic
                "\"SHOW_ORDER\" TEXT," + // 8: ShowOrder
                "\"HAD_CHILD\" TEXT," + // 9: HadChild
                "\"ISSUBSCRIBE\" TEXT," + // 10: Issubscribe
                "\"IS_HTML\" TEXT," + // 11: IsHtml
                "\"CHANNEL_URL\" TEXT," + // 12: ChannelUrl
                "\"RE_MARK\" TEXT," + // 13: ReMark
                "\"IS_DING_YUE\" TEXT," + // 14: isDingYue
                "\"IS_DEL\" TEXT," + // 15: IsDel
                "\"ST_ID\" TEXT," + // 16: StID
                "\"TYPE\" TEXT," + // 17: Type
                "\"EN_CH_NAME\" TEXT," + // 18: EnChName
                "\"BIG_FONT\" TEXT," + // 19: BigFont
                "\"CHANNEL_LOGO\" TEXT);"); // 20: ChannelLogo
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"CHANNEL_MODEL\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, ChannelModel entity) {
        stmt.clearBindings();
 
        Long _id = entity.get_id();
        if (_id != null) {
            stmt.bindLong(1, _id);
        }
 
        String parentId = entity.getParentId();
        if (parentId != null) {
            stmt.bindString(2, parentId);
        }
 
        String ID = entity.getID();
        if (ID != null) {
            stmt.bindString(3, ID);
        }
 
        String ChannelName = entity.getChannelName();
        if (ChannelName != null) {
            stmt.bindString(4, ChannelName);
        }
 
        String ImageUrl = entity.getImageUrl();
        if (ImageUrl != null) {
            stmt.bindString(5, ImageUrl);
        }
 
        String IsAd = entity.getIsAd();
        if (IsAd != null) {
            stmt.bindString(6, IsAd);
        }
 
        String IsShowHome = entity.getIsShowHome();
        if (IsShowHome != null) {
            stmt.bindString(7, IsShowHome);
        }
 
        String IsTopic = entity.getIsTopic();
        if (IsTopic != null) {
            stmt.bindString(8, IsTopic);
        }
 
        String ShowOrder = entity.getShowOrder();
        if (ShowOrder != null) {
            stmt.bindString(9, ShowOrder);
        }
 
        String HadChild = entity.getHadChild();
        if (HadChild != null) {
            stmt.bindString(10, HadChild);
        }
 
        String Issubscribe = entity.getIssubscribe();
        if (Issubscribe != null) {
            stmt.bindString(11, Issubscribe);
        }
 
        String IsHtml = entity.getIsHtml();
        if (IsHtml != null) {
            stmt.bindString(12, IsHtml);
        }
 
        String ChannelUrl = entity.getChannelUrl();
        if (ChannelUrl != null) {
            stmt.bindString(13, ChannelUrl);
        }
 
        String ReMark = entity.getReMark();
        if (ReMark != null) {
            stmt.bindString(14, ReMark);
        }
 
        String isDingYue = entity.getIsDingYue();
        if (isDingYue != null) {
            stmt.bindString(15, isDingYue);
        }
 
        String IsDel = entity.getIsDel();
        if (IsDel != null) {
            stmt.bindString(16, IsDel);
        }
 
        String StID = entity.getStID();
        if (StID != null) {
            stmt.bindString(17, StID);
        }
 
        String Type = entity.getType();
        if (Type != null) {
            stmt.bindString(18, Type);
        }
 
        String EnChName = entity.getEnChName();
        if (EnChName != null) {
            stmt.bindString(19, EnChName);
        }
 
        String BigFont = entity.getBigFont();
        if (BigFont != null) {
            stmt.bindString(20, BigFont);
        }
 
        String ChannelLogo = entity.getChannelLogo();
        if (ChannelLogo != null) {
            stmt.bindString(21, ChannelLogo);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, ChannelModel entity) {
        stmt.clearBindings();
 
        Long _id = entity.get_id();
        if (_id != null) {
            stmt.bindLong(1, _id);
        }
 
        String parentId = entity.getParentId();
        if (parentId != null) {
            stmt.bindString(2, parentId);
        }
 
        String ID = entity.getID();
        if (ID != null) {
            stmt.bindString(3, ID);
        }
 
        String ChannelName = entity.getChannelName();
        if (ChannelName != null) {
            stmt.bindString(4, ChannelName);
        }
 
        String ImageUrl = entity.getImageUrl();
        if (ImageUrl != null) {
            stmt.bindString(5, ImageUrl);
        }
 
        String IsAd = entity.getIsAd();
        if (IsAd != null) {
            stmt.bindString(6, IsAd);
        }
 
        String IsShowHome = entity.getIsShowHome();
        if (IsShowHome != null) {
            stmt.bindString(7, IsShowHome);
        }
 
        String IsTopic = entity.getIsTopic();
        if (IsTopic != null) {
            stmt.bindString(8, IsTopic);
        }
 
        String ShowOrder = entity.getShowOrder();
        if (ShowOrder != null) {
            stmt.bindString(9, ShowOrder);
        }
 
        String HadChild = entity.getHadChild();
        if (HadChild != null) {
            stmt.bindString(10, HadChild);
        }
 
        String Issubscribe = entity.getIssubscribe();
        if (Issubscribe != null) {
            stmt.bindString(11, Issubscribe);
        }
 
        String IsHtml = entity.getIsHtml();
        if (IsHtml != null) {
            stmt.bindString(12, IsHtml);
        }
 
        String ChannelUrl = entity.getChannelUrl();
        if (ChannelUrl != null) {
            stmt.bindString(13, ChannelUrl);
        }
 
        String ReMark = entity.getReMark();
        if (ReMark != null) {
            stmt.bindString(14, ReMark);
        }
 
        String isDingYue = entity.getIsDingYue();
        if (isDingYue != null) {
            stmt.bindString(15, isDingYue);
        }
 
        String IsDel = entity.getIsDel();
        if (IsDel != null) {
            stmt.bindString(16, IsDel);
        }
 
        String StID = entity.getStID();
        if (StID != null) {
            stmt.bindString(17, StID);
        }
 
        String Type = entity.getType();
        if (Type != null) {
            stmt.bindString(18, Type);
        }
 
        String EnChName = entity.getEnChName();
        if (EnChName != null) {
            stmt.bindString(19, EnChName);
        }
 
        String BigFont = entity.getBigFont();
        if (BigFont != null) {
            stmt.bindString(20, BigFont);
        }
 
        String ChannelLogo = entity.getChannelLogo();
        if (ChannelLogo != null) {
            stmt.bindString(21, ChannelLogo);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public ChannelModel readEntity(Cursor cursor, int offset) {
        ChannelModel entity = new ChannelModel( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // _id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // parentId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // ID
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // ChannelName
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // ImageUrl
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // IsAd
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // IsShowHome
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // IsTopic
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // ShowOrder
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // HadChild
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // Issubscribe
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // IsHtml
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // ChannelUrl
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // ReMark
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // isDingYue
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // IsDel
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // StID
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // Type
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // EnChName
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // BigFont
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20) // ChannelLogo
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, ChannelModel entity, int offset) {
        entity.set_id(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setParentId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setID(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setChannelName(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setImageUrl(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setIsAd(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setIsShowHome(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setIsTopic(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setShowOrder(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setHadChild(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setIssubscribe(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setIsHtml(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setChannelUrl(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setReMark(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setIsDingYue(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setIsDel(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setStID(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setType(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setEnChName(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setBigFont(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setChannelLogo(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(ChannelModel entity, long rowId) {
        entity.set_id(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(ChannelModel entity) {
        if(entity != null) {
            return entity.get_id();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(ChannelModel entity) {
        return entity.get_id() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
