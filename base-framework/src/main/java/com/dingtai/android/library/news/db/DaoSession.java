package com.dingtai.android.library.news.db;

import com.dingtai.android.library.news.model.ChannelModel;
import com.dingtai.android.library.news.model.LaunchAdModel;
import com.dingtai.android.library.news.model.NewsDetailModel;
import com.dingtai.android.library.news.model.NewsListModel;
import com.dingtai.android.library.news.model.NewsPhotoModel;
import com.dingtai.android.library.news.model.RelatedReaderModel;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig channelModelDaoConfig;
    private final DaoConfig launchAdModelDaoConfig;
    private final DaoConfig newsDetailModelDaoConfig;
    private final DaoConfig newsListModelDaoConfig;
    private final DaoConfig newsPhotoModelDaoConfig;
    private final DaoConfig relatedReaderModelDaoConfig;

    private final ChannelModelDao channelModelDao;
    private final LaunchAdModelDao launchAdModelDao;
    private final NewsDetailModelDao newsDetailModelDao;
    private final NewsListModelDao newsListModelDao;
    private final NewsPhotoModelDao newsPhotoModelDao;
    private final RelatedReaderModelDao relatedReaderModelDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        channelModelDaoConfig = daoConfigMap.get(ChannelModelDao.class).clone();
        channelModelDaoConfig.initIdentityScope(type);

        launchAdModelDaoConfig = daoConfigMap.get(LaunchAdModelDao.class).clone();
        launchAdModelDaoConfig.initIdentityScope(type);

        newsDetailModelDaoConfig = daoConfigMap.get(NewsDetailModelDao.class).clone();
        newsDetailModelDaoConfig.initIdentityScope(type);

        newsListModelDaoConfig = daoConfigMap.get(NewsListModelDao.class).clone();
        newsListModelDaoConfig.initIdentityScope(type);

        newsPhotoModelDaoConfig = daoConfigMap.get(NewsPhotoModelDao.class).clone();
        newsPhotoModelDaoConfig.initIdentityScope(type);

        relatedReaderModelDaoConfig = daoConfigMap.get(RelatedReaderModelDao.class).clone();
        relatedReaderModelDaoConfig.initIdentityScope(type);

        channelModelDao = new ChannelModelDao(channelModelDaoConfig, this);
        launchAdModelDao = new LaunchAdModelDao(launchAdModelDaoConfig, this);
        newsDetailModelDao = new NewsDetailModelDao(newsDetailModelDaoConfig, this);
        newsListModelDao = new NewsListModelDao(newsListModelDaoConfig, this);
        newsPhotoModelDao = new NewsPhotoModelDao(newsPhotoModelDaoConfig, this);
        relatedReaderModelDao = new RelatedReaderModelDao(relatedReaderModelDaoConfig, this);

        registerDao(ChannelModel.class, channelModelDao);
        registerDao(LaunchAdModel.class, launchAdModelDao);
        registerDao(NewsDetailModel.class, newsDetailModelDao);
        registerDao(NewsListModel.class, newsListModelDao);
        registerDao(NewsPhotoModel.class, newsPhotoModelDao);
        registerDao(RelatedReaderModel.class, relatedReaderModelDao);
    }
    
    public void clear() {
        channelModelDaoConfig.clearIdentityScope();
        launchAdModelDaoConfig.clearIdentityScope();
        newsDetailModelDaoConfig.clearIdentityScope();
        newsListModelDaoConfig.clearIdentityScope();
        newsPhotoModelDaoConfig.clearIdentityScope();
        relatedReaderModelDaoConfig.clearIdentityScope();
    }

    public ChannelModelDao getChannelModelDao() {
        return channelModelDao;
    }

    public LaunchAdModelDao getLaunchAdModelDao() {
        return launchAdModelDao;
    }

    public NewsDetailModelDao getNewsDetailModelDao() {
        return newsDetailModelDao;
    }

    public NewsListModelDao getNewsListModelDao() {
        return newsListModelDao;
    }

    public NewsPhotoModelDao getNewsPhotoModelDao() {
        return newsPhotoModelDao;
    }

    public RelatedReaderModelDao getRelatedReaderModelDao() {
        return relatedReaderModelDao;
    }

}
