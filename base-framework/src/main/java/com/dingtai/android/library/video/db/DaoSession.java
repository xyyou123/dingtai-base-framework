package com.dingtai.android.library.video.db;

import com.dingtai.android.library.video.model.LiveChannelModel;
import com.dingtai.android.library.video.model.LiveProgramModel;
import com.dingtai.android.library.video.model.VideoChannelModel;
import com.dingtai.android.library.video.model.VodListModel;
import com.dingtai.android.library.video.model.VodProgramModel;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig liveChannelModelDaoConfig;
    private final DaoConfig liveProgramModelDaoConfig;
    private final DaoConfig videoChannelModelDaoConfig;
    private final DaoConfig vodListModelDaoConfig;
    private final DaoConfig vodProgramModelDaoConfig;

    private final LiveChannelModelDao liveChannelModelDao;
    private final LiveProgramModelDao liveProgramModelDao;
    private final VideoChannelModelDao videoChannelModelDao;
    private final VodListModelDao vodListModelDao;
    private final VodProgramModelDao vodProgramModelDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        liveChannelModelDaoConfig = daoConfigMap.get(LiveChannelModelDao.class).clone();
        liveChannelModelDaoConfig.initIdentityScope(type);

        liveProgramModelDaoConfig = daoConfigMap.get(LiveProgramModelDao.class).clone();
        liveProgramModelDaoConfig.initIdentityScope(type);

        videoChannelModelDaoConfig = daoConfigMap.get(VideoChannelModelDao.class).clone();
        videoChannelModelDaoConfig.initIdentityScope(type);

        vodListModelDaoConfig = daoConfigMap.get(VodListModelDao.class).clone();
        vodListModelDaoConfig.initIdentityScope(type);

        vodProgramModelDaoConfig = daoConfigMap.get(VodProgramModelDao.class).clone();
        vodProgramModelDaoConfig.initIdentityScope(type);

        liveChannelModelDao = new LiveChannelModelDao(liveChannelModelDaoConfig, this);
        liveProgramModelDao = new LiveProgramModelDao(liveProgramModelDaoConfig, this);
        videoChannelModelDao = new VideoChannelModelDao(videoChannelModelDaoConfig, this);
        vodListModelDao = new VodListModelDao(vodListModelDaoConfig, this);
        vodProgramModelDao = new VodProgramModelDao(vodProgramModelDaoConfig, this);

        registerDao(LiveChannelModel.class, liveChannelModelDao);
        registerDao(LiveProgramModel.class, liveProgramModelDao);
        registerDao(VideoChannelModel.class, videoChannelModelDao);
        registerDao(VodListModel.class, vodListModelDao);
        registerDao(VodProgramModel.class, vodProgramModelDao);
    }
    
    public void clear() {
        liveChannelModelDaoConfig.clearIdentityScope();
        liveProgramModelDaoConfig.clearIdentityScope();
        videoChannelModelDaoConfig.clearIdentityScope();
        vodListModelDaoConfig.clearIdentityScope();
        vodProgramModelDaoConfig.clearIdentityScope();
    }

    public LiveChannelModelDao getLiveChannelModelDao() {
        return liveChannelModelDao;
    }

    public LiveProgramModelDao getLiveProgramModelDao() {
        return liveProgramModelDao;
    }

    public VideoChannelModelDao getVideoChannelModelDao() {
        return videoChannelModelDao;
    }

    public VodListModelDao getVodListModelDao() {
        return vodListModelDao;
    }

    public VodProgramModelDao getVodProgramModelDao() {
        return vodProgramModelDao;
    }

}
